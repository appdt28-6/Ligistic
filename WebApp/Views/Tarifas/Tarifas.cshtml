@{
    ViewBag.Title = "Tarifas";
}
<!-- Main Content -->
<div class="page-wrapper">
    <div class="container-fluid">

        <!-- Title -->
        <div class="row heading-bg">
            <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
                <h5 class="txt-dark">Panel de Control</h5>
            </div>
            <!-- Breadcrumb -->
            <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
                <ol class="breadcrumb">
                    <li><a href="index.html">Dashboard</a></li>
                    <li><a href="#"><span>Configuracion</span></a></li>
                    <li class="active"><span>Tarifas</span></li>
                </ol>
            </div>
            <!-- /Breadcrumb -->
        </div>
        <!-- /Title -->
        <!-- Row -->
        <div class="row">
            <div class="col-sm-12">
                <div class="panel panel-default card-view">
                    <div class="panel-heading">
                        <div class="pull-left">
                            <h6 class="panel-title txt-dark">Tarifas</h6>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div class="panel-wrapper collapse in">
                        <div class="panel-body">
                            <div class="table-wrap">
                                <div class="table-responsive">
                                    @(Html.Kendo().Grid<WebApp.Models.vis_Tarifas>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.cost_id).Hidden();
          columns.Bound(c => c.dest_ini).Title("Origen").EditorTemplateName("_Origen");
          columns.Bound(c => c.origen).Title("Origen");
          columns.Bound(c => c.dest_end).Title("Destino").EditorTemplateName("_Destino");
          columns.Bound(c => c.destino).Title("Destino");
          columns.Bound(c => c.dest_cost).Title("Tramo").Format("{0:C}");
          columns.Bound(c => c.dest_cost_redondo).Title("Redondo").Format("{0:C}");
          columns.Command(command => { command.Edit().Text("Editar").UpdateText("Guardar").CancelText("Cancelar"); command.Destroy().Text("Eliminar"); }).Width(180);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Create().Text("Nueva");
          toolbar.Excel();
          toolbar.Pdf();
      })
      .Editable(editable => editable.Mode(GridEditMode.InLine))
      .Pageable()
      .Filterable()
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => { model.Id(p => p.cost_id);
              model.Field(p => p.origen).Editable(false);
              model.Field(p => p.destino).Editable(false);
          })
          .Read(read => read.Action("DESTINO_LOGISTIC_COSTO_Read", "Tarifas"))
          .Create(create => create.Action("DESTINO_LOGISTIC_COSTO_Create", "Tarifas"))
          .Update(update => update.Action("DESTINO_LOGISTIC_COSTO_Update", "Tarifas"))
          .Destroy(destroy => destroy.Action("DESTINO_LOGISTIC_COSTO_Destroy", "Tarifas"))
      )
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /Row -->

    </div>
</div>
